int matrix_chainM(int *p, int n) {
int i, j, **m;
m = malloc((n+1)*sizeof(int *));
for (i = 0; i <= n; i++)
m[i] = malloc((n+1)*sizeof(int));
for (i = 0; i <= n; i++)
for (j = 0; j <= n; j++)
m[i][j] = INT_MAX;
return lookup(p, 1, n, m);
}
Complessità T(n) = O(n3)
S(n) = (n2)

int lookup(int *p, int i, int j, int **m) {
int k, q;
if (m[i][j] < INT_MAX)
return m[i][j];
if (i==j)
m[i][j] = 0;
else
for (k= i; k <j; k++) {
q = lookup(p, i, k, m) +
lookup(p, k+1, j, m) + p[i-1]*p[k]*p[j];
if (q < m[i][j])
m[i][j] = q;
}
return m[i][j];
}